openapi: 3.0.3
info:
  title: 社交媒体监控系统 - 主控API
  version: 1.0.0
  description: 主控服务提供的REST API,供客户端管理账户和查询数据

servers:
  - url: http://localhost:3000/api/v1
    description: 本地开发环境
  - url: https://api.monitor.example.com/api/v1
    description: 生产环境

paths:
  /accounts:
    get:
      summary: 获取账户列表
      tags: [账户管理]
      parameters:
        - name: status
          in: query
          schema:
            type: string
            enum: [active, paused, error, expired]
          description: 过滤账户状态
        - name: platform
          in: query
          schema:
            type: string
          description: 过滤平台类型
      responses:
        '200':
          description: 成功返回账户列表
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/Account'

    post:
      summary: 添加新账户
      tags: [账户管理]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required: [platform, account_name, account_id, credentials]
              properties:
                platform:
                  type: string
                  example: douyin
                account_name:
                  type: string
                  example: 我的抖音账号
                account_id:
                  type: string
                  example: dy123456
                credentials:
                  type: object
                  description: 登录凭证(cookies或token)
                monitor_interval:
                  type: integer
                  default: 30
      responses:
        '201':
          description: 账户创建成功
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  data:
                    $ref: '#/components/schemas/Account'
        '400':
          $ref: '#/components/responses/BadRequest'

  /accounts/{id}:
    get:
      summary: 获取账户详情
      tags: [账户管理]
      parameters:
        - $ref: '#/components/parameters/AccountId'
      responses:
        '200':
          description: 成功返回账户详情
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  data:
                    $ref: '#/components/schemas/Account'
        '404':
          $ref: '#/components/responses/NotFound'

    patch:
      summary: 更新账户配置
      tags: [账户管理]
      parameters:
        - $ref: '#/components/parameters/AccountId'
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                account_name:
                  type: string
                status:
                  type: string
                  enum: [active, paused]
                monitor_interval:
                  type: integer
                credentials:
                  type: object
      responses:
        '200':
          description: 更新成功
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  data:
                    $ref: '#/components/schemas/Account'

    delete:
      summary: 删除账户
      tags: [账户管理]
      parameters:
        - $ref: '#/components/parameters/AccountId'
      responses:
        '200':
          description: 删除成功
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  message:
                    type: string

  /messages:
    get:
      summary: 获取历史消息(评论+私信)
      tags: [消息管理]
      parameters:
        - name: account_id
          in: query
          required: true
          schema:
            type: string
        - name: type
          in: query
          schema:
            type: string
            enum: [comment, message, all]
          default: all
        - name: is_read
          in: query
          schema:
            type: boolean
        - name: start_date
          in: query
          schema:
            type: string
            format: date
        - name: end_date
          in: query
          schema:
            type: string
            format: date
        - name: limit
          in: query
          schema:
            type: integer
            default: 50
        - name: offset
          in: query
          schema:
            type: integer
            default: 0
      responses:
        '200':
          description: 成功返回消息列表
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/Message'
                  pagination:
                    $ref: '#/components/schemas/Pagination'

  /messages/{id}/read:
    post:
      summary: 标记消息为已读
      tags: [消息管理]
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: 标记成功
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean

  /statistics:
    get:
      summary: 获取统计数据
      tags: [统计分析]
      parameters:
        - name: account_id
          in: query
          schema:
            type: string
        - name: period
          in: query
          schema:
            type: string
            enum: [day, week, month]
          default: week
      responses:
        '200':
          description: 返回统计数据
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  data:
                    type: object
                    properties:
                      total_comments:
                        type: integer
                      total_messages:
                        type: integer
                      unread_count:
                        type: integer
                      trend:
                        type: array
                        items:
                          type: object
                          properties:
                            date:
                              type: string
                            count:
                              type: integer

  /notification-rules:
    get:
      summary: 获取通知规则列表
      tags: [通知规则]
      responses:
        '200':
          description: 返回规则列表
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/NotificationRule'

    post:
      summary: 创建通知规则
      tags: [通知规则]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required: [rule_type, config]
              properties:
                account_id:
                  type: string
                  nullable: true
                rule_type:
                  type: string
                  enum: [keyword, schedule, priority]
                config:
                  type: object
                enabled:
                  type: boolean
                  default: true
      responses:
        '201':
          description: 规则创建成功
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  data:
                    $ref: '#/components/schemas/NotificationRule'

  /workers:
    get:
      summary: 获取Worker节点列表
      tags: [系统监控]
      responses:
        '200':
          description: 返回Worker列表
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/Worker'

components:
  schemas:
    Account:
      type: object
      properties:
        id:
          type: string
        platform:
          type: string
        account_name:
          type: string
        account_id:
          type: string
        status:
          type: string
          enum: [active, paused, error, expired]
        monitor_interval:
          type: integer
        last_check_time:
          type: integer
        assigned_worker_id:
          type: string
        created_at:
          type: integer
        updated_at:
          type: integer

    Message:
      type: object
      properties:
        id:
          type: string
        type:
          type: string
          enum: [comment, message]
        account_id:
          type: string
        content:
          type: string
        from_name:
          type: string
        from_id:
          type: string
        is_read:
          type: boolean
        detected_at:
          type: integer
        created_at:
          type: integer
        # comment特有字段
        post_id:
          type: string
        post_title:
          type: string
        # message特有字段
        direction:
          type: string
          enum: [incoming, outgoing]

    NotificationRule:
      type: object
      properties:
        id:
          type: string
        account_id:
          type: string
          nullable: true
        rule_type:
          type: string
        config:
          type: object
        enabled:
          type: boolean
        created_at:
          type: integer

    Worker:
      type: object
      properties:
        id:
          type: string
        host:
          type: string
        port:
          type: integer
        status:
          type: string
          enum: [online, offline, error]
        assigned_accounts:
          type: integer
        last_heartbeat:
          type: integer
        started_at:
          type: integer
        version:
          type: string

    Pagination:
      type: object
      properties:
        total:
          type: integer
        limit:
          type: integer
        offset:
          type: integer
        has_more:
          type: boolean

  parameters:
    AccountId:
      name: id
      in: path
      required: true
      schema:
        type: string
      description: 账户ID

  responses:
    BadRequest:
      description: 请求参数错误
      content:
        application/json:
          schema:
            type: object
            properties:
              success:
                type: boolean
                example: false
              error:
                type: string

    NotFound:
      description: 资源不存在
      content:
        application/json:
          schema:
            type: object
            properties:
              success:
                type: boolean
                example: false
              error:
                type: string
                example: Resource not found
