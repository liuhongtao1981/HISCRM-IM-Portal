/**
 * Ê£ÄÊü•ÊúâËØÑËÆ∫ÁöÑ‰∏ªÈ¢òÊï∞ÊçÆ
 */

const io = require('socket.io-client');

const MASTER_URL = 'http://localhost:3000';

console.log('='.repeat(80));
console.log('Ê£ÄÊü•ÊúâËØÑËÆ∫ÁöÑ‰∏ªÈ¢òÊï∞ÊçÆ');
console.log('='.repeat(80));

const socket = io(MASTER_URL, {
  transports: ['websocket', 'polling']
});

socket.on('connect', () => {
  console.log('\n‚úÖ Â∑≤ËøûÊé•Âà∞ Master');
  socket.emit('monitor:register', {
    clientType: 'monitor',
    clientId: `test_${Date.now()}`
  });
});

socket.on('monitor:registered', () => {
  console.log('‚úÖ Ê≥®ÂÜåÊàêÂäü');
  socket.emit('monitor:request_channels');
});

socket.on('monitor:channels', (data) => {
  if (data.channels && data.channels.length > 0) {
    const channelId = data.channels[0].id;
    socket.emit('monitor:request_topics', { channelId });
  }
});

socket.on('monitor:topics', (data) => {
  console.log('\nüìã Êü•ÊâæÊúâÊ∂àÊÅØÁöÑ‰∏ªÈ¢ò...\n');

  if (data.topics && data.topics.length > 0) {
    // ÊâæÂà∞ÊâÄÊúâÊúâÊ∂àÊÅØÁöÑ‰∏ªÈ¢ò
    const topicsWithMessages = data.topics.filter(t => t.messageCount > 0);

    console.log(`ÊúâÊ∂àÊÅØÁöÑ‰∏ªÈ¢ò: ${topicsWithMessages.length} ‰∏™\n`);

    topicsWithMessages.forEach((topic, index) => {
      console.log(`‰∏ªÈ¢ò ${index + 1}:`);
      console.log(`  ID: ${topic.id}`);
      console.log(`  Ê†áÈ¢ò: ${topic.title}`);
      console.log(`  Ê∂àÊÅØÊï∞: ${topic.messageCount}`);
      console.log(`  isPrivate: ${topic.isPrivate || false}`);
      console.log('');
    });

    if (topicsWithMessages.length > 0) {
      // ËØ∑Ê±ÇÁ¨¨‰∏Ä‰∏™ÊúâÊ∂àÊÅØÁöÑ‰∏ªÈ¢ò
      const topic = topicsWithMessages[0];
      console.log(`\nüì° ËØ∑Ê±Ç‰∏ªÈ¢ò "${topic.title}" ÁöÑÊ∂àÊÅØ...`);
      socket.emit('monitor:request_messages', {
        channelId: topic.channelId,
        topicId: topic.id
      });
    } else {
      console.log('\n‚ö†Ô∏è  ÊâÄÊúâ‰∏ªÈ¢òÈÉΩÊ≤°ÊúâÊ∂àÊÅØ');
      process.exit(0);
    }
  }
});

socket.on('monitor:messages', (data) => {
  console.log(`\nüí¨ Êî∂Âà∞ ${data.messages?.length || 0} Êù°Ê∂àÊÅØ\n`);

  if (data.messages && data.messages.length > 0) {
    data.messages.forEach((msg, index) => {
      console.log(`Ê∂àÊÅØ ${index + 1}:`);
      console.log(`  ÂèëÈÄÅËÄÖ: ${msg.fromName}`);
      console.log(`  ÂÜÖÂÆπ: ${msg.content}`);
      console.log(`  Á±ªÂûã: ${msg.type}`);
      console.log(`  ÂàÜÁ±ª: ${msg.messageCategory || 'Êú™ËÆæÁΩÆ'} ‚úÖ`);
      console.log(`  Â∑≤Â§ÑÁêÜ: ${msg.isHandled !== undefined ? msg.isHandled : 'Êú™ËÆæÁΩÆ'} ‚úÖ`);
      console.log(`  ÊñπÂêë: ${msg.direction}`);
      console.log(`  Êó∂Èó¥: ${new Date(msg.timestamp).toLocaleString('zh-CN')}`);
      console.log('');
    });
  }

  console.log('='.repeat(80));
  console.log('Ê£ÄÊü•ÂÆåÊàê');
  console.log('='.repeat(80));
  process.exit(0);
});

socket.on('error', (error) => {
  console.error('‚ùå ÈîôËØØ:', error);
  process.exit(1);
});

setTimeout(() => {
  console.log('\n‚è±Ô∏è  Ë∂ÖÊó∂');
  process.exit(1);
}, 10000);
