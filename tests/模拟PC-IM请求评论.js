/**
 * Ê®°Êãü PC IM ËØ∑Ê±ÇËØÑËÆ∫Êï∞ÊçÆ
 */

const io = require('socket.io-client');

const MASTER_URL = 'http://localhost:3000';
const CHANNEL_ID = 'acc-98296c87-2e42-447a-9d8b-8be008ddb6e4';
const TOPIC_ID = '7566840303458569498'; // Â§ßÁôΩ‰ª¨Êô®‰ºö‰∫§Áè≠

console.log('='.repeat(80));
console.log('Ê®°Êãü PC IM ËØ∑Ê±ÇËØÑËÆ∫Êï∞ÊçÆ');
console.log('='.repeat(80));
console.log(`È¢ëÈÅì ID: ${CHANNEL_ID}`);
console.log(`‰∏ªÈ¢ò ID: ${TOPIC_ID}`);
console.log('='.repeat(80));

const socket = io(MASTER_URL, {
  transports: ['websocket', 'polling']
});

socket.on('connect', () => {
  console.log('\n‚úÖ Â∑≤ËøûÊé•');

  // 1. Ê≥®ÂÜå
  console.log('\nüìù Ê≠•È™§ 1: Ê≥®ÂÜå‰∏∫ÁõëÊéßÂÆ¢Êà∑Á´Ø');
  socket.emit('monitor:register', {
    clientType: 'monitor',
    clientId: `monitor_${Date.now()}`
  });
});

socket.on('monitor:registered', (data) => {
  console.log('‚úÖ Ê≥®ÂÜåÊàêÂäü:', JSON.stringify(data, null, 2));

  // 2. ËØ∑Ê±Ç‰∏ªÈ¢òÂàóË°®
  console.log('\nüìù Ê≠•È™§ 2: ËØ∑Ê±Ç‰∏ªÈ¢òÂàóË°®');
  socket.emit('monitor:request_topics', { channelId: CHANNEL_ID });
});

socket.on('monitor:topics', (data) => {
  console.log(`‚úÖ Êî∂Âà∞ ${data.topics?.length || 0} ‰∏™‰∏ªÈ¢ò`);

  // ÊâæÂà∞ÁõÆÊ†á‰∏ªÈ¢ò
  const targetTopic = data.topics?.find(t => t.id === TOPIC_ID);
  if (targetTopic) {
    console.log('\nÁõÆÊ†á‰∏ªÈ¢ò:');
    console.log(JSON.stringify(targetTopic, null, 2));
  } else {
    console.log('\n‚ùå Ê≤°ÊúâÊâæÂà∞ÁõÆÊ†á‰∏ªÈ¢ò');
  }

  // 3. ËØ∑Ê±ÇÊ∂àÊÅØÂàóË°®
  console.log('\nüìù Ê≠•È™§ 3: ËØ∑Ê±ÇÊ∂àÊÅØÂàóË°®');
  console.log(`ËØ∑Ê±ÇÂèÇÊï∞: channelId=${CHANNEL_ID}, topicId=${TOPIC_ID}`);
  socket.emit('monitor:request_messages', {
    channelId: CHANNEL_ID,
    topicId: TOPIC_ID
  });
});

socket.on('monitor:messages', (data) => {
  console.log('\n‚úÖ Êî∂Âà∞Ê∂àÊÅØÂìçÂ∫î:');
  console.log(JSON.stringify(data, null, 2));

  if (data.messages && data.messages.length > 0) {
    console.log(`\nÂÖ± ${data.messages.length} Êù°Ê∂àÊÅØ:`);
    data.messages.forEach((msg, index) => {
      console.log(`\nÊ∂àÊÅØ ${index + 1}:`);
      console.log(`  ID: ${msg.id}`);
      console.log(`  ÂèëÈÄÅËÄÖ: ${msg.fromName}`);
      console.log(`  ÂÜÖÂÆπ: ${msg.content}`);
      console.log(`  Á±ªÂûã: ${msg.type}`);
      console.log(`  ÂàÜÁ±ª: ${msg.messageCategory}`);
      console.log(`  Â∑≤Â§ÑÁêÜ: ${msg.isHandled}`);
      console.log(`  channelId: ${msg.channelId}`);
      console.log(`  topicId: ${msg.topicId}`);
    });
  } else {
    console.log('\n‚ö†Ô∏è  Ê∂àÊÅØÂàóË°®‰∏∫Á©∫ÊàñÊú™ÂÆö‰πâ');
    console.log('data.messages:', data.messages);
  }

  console.log('\n' + '='.repeat(80));
  console.log('ÊµãËØïÂÆåÊàê');
  console.log('='.repeat(80));
  process.exit(0);
});

socket.on('disconnect', () => {
  console.log('\n‚ùå ËøûÊé•Êñ≠ÂºÄ');
});

socket.on('error', (error) => {
  console.error('\n‚ùå ÈîôËØØ:', error);
  process.exit(1);
});

// ÁõëÂê¨ÊâÄÊúâ‰∫ã‰ª∂Áî®‰∫éË∞ÉËØï
socket.onAny((eventName, ...args) => {
  if (!['monitor:registered', 'monitor:topics', 'monitor:messages'].includes(eventName)) {
    console.log(`\n[DEBUG] Êî∂Âà∞‰∫ã‰ª∂: ${eventName}`, args);
  }
});

setTimeout(() => {
  console.log('\n‚è±Ô∏è  Ë∂ÖÊó∂');
  process.exit(1);
}, 10000);
